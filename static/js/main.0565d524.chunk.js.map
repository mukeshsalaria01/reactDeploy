{"version":3,"sources":["service.js","test.js","serviceWorker.js","index.js"],"names":["ItemService","fetch","method","mode","headers","window","localStorage","token","then","response","ok","handleResponseError","json","catch","error","handleError","refreshToken","newitem","body","JSON","stringify","Error","status","console","log","Ribbon","props","itemService","setShow","bind","chackToken","onPageOpen","login","handleChange","state","showDetails","showLogin","showError","show","searchable","virtual","open","target","this","setState","name","value","className","align","id","type","placeholder","username","onChange","password","onClick","Modal","onHide","dialogClassName","aria-labelledby","Header","closeButton","Title","Body","style","marginLeft","readOnly","PageName","PageDisplayName","Discription","defaultChecked","handleChangeChk","handleChangeChk12","data","Username","Password","item","undefined","accessToken","validateToken","pageProperty","nodeName","displayName","description","Component","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.0565d524.chunk.js","sourcesContent":["\r\nclass ItemService {\r\n\r\n    async validateToken() {\r\n        return fetch('https://wakanda-cm.developerprogram.org/api/v1/validate', {\r\n            method: \"GET\",\r\n            mode: \"cors\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"x-auth-token\": window.localStorage.token\r\n            },\r\n        })\r\n            .then(response => {\r\n                if (!response.ok) {\r\n                    this.handleResponseError(response);\r\n                }\r\n                return response.json();\r\n            })\r\n            .catch(error => {\r\n                this.handleError(error);\r\n            });\r\n    }\r\n\r\n    async refreshToken() {\r\n        return fetch('https://wakanda-cm.developerprogram.org/api/v1/accessToken', {\r\n            method: \"POST\",\r\n            mode: \"cors\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"refresh-token\": window.localStorage.refreshToken\r\n            },\r\n        }).then(response => {\r\n            if (!response.ok) {\r\n                this.handleResponseError(response);\r\n            }\r\n            return response.json();\r\n        })\r\n            .catch(error => {\r\n                this.handleError(error);\r\n            });\r\n    }\r\n\r\n    async login(newitem) {\r\n        return fetch('https://wakanda-cm.developerprogram.org/api/v1/login', {\r\n            method: \"post\",\r\n            mode: \"cors\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(newitem)\r\n        })\r\n            .then(response => {\r\n                if (!response.ok) {\r\n                    this.handleResponseError(response);\r\n                }\r\n                return response.json();\r\n            })\r\n            .catch(error => {\r\n                this.handleError(error);\r\n            });\r\n    }\r\n\r\n    async pageProperty() {\r\n        return fetch('https://wakanda-cm.developerprogram.org/api/v1/channel/page/show?uuid=7c41b988-ba6f-4785-9750-6075e18a3c1c', {\r\n            method: \"GET\",\r\n            mode: \"cors\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"x-auth-token\": window.localStorage.token\r\n            },\r\n        }).then(response => {\r\n            if (!response.ok) {\r\n                this.handleResponseError(response);\r\n            }\r\n            return response.json();\r\n        })\r\n            .catch(error => {\r\n                this.handleError(error);\r\n            });\r\n    }\r\n\r\n    handleResponseError(response) {\r\n        throw new Error(\"HTTP error, status = \" + response.status);\r\n    }\r\n    handleError(error) {\r\n        console.log(error);\r\n    }\r\n}\r\nexport default ItemService;","\r\nimport React, { Component } from 'react';\r\nimport ItemService from './service';\r\nimport { Modal } from 'react-bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nclass Ribbon extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.itemService = new ItemService();\r\n        this.setShow = this.setShow.bind(this);\r\n        this.chackToken = this.chackToken.bind(this);\r\n        this.onPageOpen = this.onPageOpen.bind(this);\r\n        this.login = this.login.bind(this);\r\n        this.refreshToken = this.refreshToken.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.state = {\r\n            showDetails: false,\r\n            showLogin: false,\r\n            showError: false,\r\n            show: false,\r\n            searchable: false,\r\n            virtual: false,\r\n            open: false\r\n        }\r\n    }\r\n\r\n    handleChange({ target }) {\r\n        this.setState({\r\n            [target.name]: target.value\r\n        });\r\n    }\r\n\r\n\r\n    render() {\r\n        const showDetails = this.state.showDetails;\r\n        const showLogin = this.state.showLogin;\r\n        const showError = this.state.showError;\r\n        const show = this.state.show;\r\n        const open = this.state.open;\r\n\r\n        return (\r\n            <>\r\n                <section className=\"togglenav-section-area\">\r\n                    {open && <div className=\"nav-area\">\r\n                        <div align=\"center\">\r\n\r\n                            {showLogin && <form id=\"login\" >\r\n                            <input type=\"text\" placeholder=\"User Name\" name=\"Username\" className=\"input-field\" value={this.state.username} onChange={this.handleChange} />\r\n                            <input type=\"password\" placeholder=\"Password\" name=\"Password\" className=\"input-field\" value={this.state.password} onChange={this.handleChange} />\r\n                            <button type=\"button\" className=\"login-btn-area\" onClick={this.login}>Log In</button>\r\n                            </form>}\r\n                            {showDetails && <button type=\"button\" className=\"login-btn-area\" onClick={this.onPageOpen}>Page Property</button>}\r\n\r\n                        </div>\r\n                        {showError && <span id=\"logInError\"> Invalid username & password.</span>}\r\n                    </div>}\r\n\r\n                    <div onClick={this.chackToken} className=\"toggle-btn-area\"><span className=\"plus-icon-area\">+</span></div>\r\n                    \r\n                </section>\r\n\r\n                <Modal\r\n                    show={show}\r\n                    onHide={this.setShow}\r\n                    dialogClassName=\"modal-90w\"\r\n                    aria-labelledby=\"example-custom-modal-styling-title\">\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title id=\"example-custom-modal-styling-title\">\r\n                            Page Properties\r\n                    </Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body style={{ marginLeft: '20%' }}>\r\n\r\n                        <div className=\"form-group row\">\r\n                            <div className=\"col-md-6 row\">Page Name</div>\r\n                            <div className=\"col-md-6\">\r\n                                <input type=\"text\" className=\"from-control\" readOnly value={this.state.PageName} ></input>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"form-group row\">\r\n                            <div className=\"col-md-6 row\">Page Display Name</div>\r\n                            <div className=\"col-md-6\">\r\n                                <input type=\"text\" className=\"from-control\" readOnly id=\"txtPageDisplayName\" value={this.state.PageDisplayName} ></input>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"form-group row\">\r\n                            <div className=\"col-md-6 row\">Discription</div>\r\n                            <div className=\"col-md-6\">\r\n                                <input type=\"text\" className=\"from-control\" readOnly id=\"txtDiscription\" value={this.state.Discription} ></input>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"form-group row\">\r\n                            <div className=\"col-md-6 row\">Searchable</div>\r\n                            <div className=\"col-md-6\">\r\n                                <input type=\"checkbox\" className=\"from-control\" id=\"chkSearchable\" defaultChecked={this.state.searchable} onChange={this.handleChangeChk}></input>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"form-group row\">\r\n                            <div className=\"col-md-6 row\">Virtual</div>\r\n                            <div className=\"col-md-6\">\r\n                                <input className=\"from-control\" type=\"checkbox\" id=\"chkVirtual\" defaultChecked={this.state.virtual} onChange={this.handleChangeChk12}></input>\r\n                            </div>\r\n                        </div>\r\n                    </Modal.Body>\r\n                </Modal>\r\n            </>\r\n        );\r\n    }\r\n\r\n\r\n\r\n    login() {\r\n        var data = {\r\n            username: this.state.Username,\r\n            password: this.state.Password\r\n        };\r\n        this.itemService.login(data).then(item => {\r\n            if (item != undefined && item.username != null) {\r\n                window.localStorage.refreshToken = item.refreshToken;\r\n                window.localStorage.token = item.accessToken;\r\n                this.setState({\r\n                    showDetails: true,\r\n                    showLogin: false,\r\n                    showError:false\r\n                });\r\n            }\r\n            else {\r\n                this.setState({\r\n                    showError: true,\r\n                    showDetails: false,\r\n                    showLogin: true\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    chackToken() {\r\n        this.setState({\r\n            open: !this.state.open\r\n        });\r\n        this.itemService.validateToken().then(item => {\r\n            if (item != undefined && item.username != null) {\r\n                window.localStorage.refreshToken = item.refreshToken;\r\n                window.localStorage.token = item.accessToken;\r\n                this.setState({\r\n                    showDetails: true,\r\n                    showLogin: false\r\n                });\r\n            }\r\n            else {\r\n                this.setState({\r\n                    showDetails: false,\r\n                    showLogin: true\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    refreshToken() {\r\n        this.itemService.refreshToken().then(item => {\r\n            if (item != undefined && item.username != null) {\r\n                window.localStorage.refreshToken = item.refreshToken;\r\n                window.localStorage.token = item.accessToken;\r\n                this.setState({\r\n                    showDetails: true,\r\n                    showLogin: false\r\n                });\r\n            } else {\r\n                this.setState({\r\n                    showDetails: false,\r\n                    showLogin: true\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    onPageOpen() {\r\n        this.itemService.pageProperty().then(item => {\r\n            if (item) {\r\n                if (item.data.searchable) {\r\n                    this.setState({\r\n                        searchable: true\r\n                    });\r\n                }\r\n                if (item.data.virtual) {\r\n                    this.setState({\r\n                        virtual: true\r\n                    });\r\n                }\r\n                this.setState({\r\n                    show: true,\r\n                    PageName: item.data.nodeName,\r\n                    PageDisplayName: item.data.displayName,\r\n                    Discription: item.data.description,\r\n                    //uuid: item.data.UUID\r\n                });\r\n            } else {\r\n                this.setState({\r\n                    showDetails: false,\r\n                    showLogin: true\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    setShow() {\r\n        this.setState({\r\n            show: !this.state.show\r\n        });\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default Ribbon;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Ribbon from './test';\nimport * as serviceWorker from './serviceWorker';\n\n\n\n  // <React.StrictMode>\n    // <App />\n  // </React.StrictMode>,\n  //document.getElementById('root')\n     //ReactDOM.render(<App />, document.getElementById(\"root\"));\n\n\nReactDOM.render(<Ribbon />, document.getElementById('root123'));\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}