{"version":3,"sources":["service.js","test.js","serviceWorker.js","index.js"],"names":["ItemService","uuid","fetch","method","mode","headers","window","localStorage","token","then","response","ok","handleResponseError","json","catch","error","handleError","refreshToken","newitem","body","JSON","stringify","updateItem","Error","status","console","log","Ribbon","props","getRowsData","items","this","state","tableData","keys","map","row","index","date","Moment","format","key","data","itemService","setShow","bind","setShowTable","chackToken","showPageProperty","onPageOpen","login","handleChange","handleVirtualChange","updatePageProperty","showDetails","showLogin","showError","show","showTable","searchable","virtual","isVirtualPage","open","showVirtualPage","target","setState","name","value","className","align","id","type","placeholder","username","onChange","password","onClick","Modal","onHide","dialogClassName","aria-labelledby","Header","closeButton","Title","Body","href","PageName","PageDisplayName","Discription","handleChangecheck","defaultChecked","ng-model","label","Username","Password","item","undefined","accessToken","validateToken","pageProperty","nodeName","displayName","description","UUID","getPageProperty","results","alert","message","Component","RenderRow","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a4a0f4c8.chunk.js","sourcesContent":["\r\nclass ItemService {\r\n\r\n    async getPageProperty(uuid) {\r\n        return fetch('https://wakanda-cm.developerprogram.org/api/v1/revisionHistory/show?uuid=' + uuid, {\r\n            method: \"GET\",\r\n            mode: \"cors\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"x-auth-token\": window.localStorage.token\r\n            },\r\n        })\r\n            .then(response => {\r\n                if (!response.ok) {\r\n                    this.handleResponseError(response);\r\n                }\r\n                return response.json();\r\n            })\r\n            .catch(error => {\r\n                this.handleError(error);\r\n            });\r\n    }\r\n\r\n    async validateToken() {\r\n        return fetch('https://wakanda-cm.developerprogram.org/api/v1/validate', {\r\n            method: \"GET\",\r\n            mode: \"cors\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"x-auth-token\": window.localStorage.token\r\n            },\r\n        })\r\n            .then(response => {\r\n                if (!response.ok) {\r\n                    this.handleResponseError(response);\r\n                }\r\n                return response.json();\r\n            })\r\n            .catch(error => {\r\n                this.handleError(error);\r\n            });\r\n    }\r\n\r\n    async refreshToken() {\r\n        return fetch('https://wakanda-cm.developerprogram.org/api/v1/accessToken', {\r\n            method: \"POST\",\r\n            mode: \"cors\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"refresh-token\": window.localStorage.refreshToken\r\n            },\r\n        }).then(response => {\r\n            if (!response.ok) {\r\n                this.handleResponseError(response);\r\n            }\r\n            return response.json();\r\n        })\r\n            .catch(error => {\r\n                this.handleError(error);\r\n            });\r\n    }\r\n\r\n    async login(newitem) {\r\n        return fetch('https://wakanda-cm.developerprogram.org/api/v1/login', {\r\n            method: \"post\",\r\n            mode: \"cors\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(newitem)\r\n        })\r\n            .then(response => {\r\n                if (!response.ok) {\r\n                    this.handleResponseError(response);\r\n                }\r\n                return response.json();\r\n            })\r\n            .catch(error => {\r\n                this.handleError(error);\r\n            });\r\n    }\r\n\r\n    async pageProperty() {\r\n        return fetch('https://wakanda-cm.developerprogram.org/api/v1/channel/page/show?uuid=7c41b988-ba6f-4785-9750-6075e18a3c1c', {\r\n            method: \"GET\",\r\n            mode: \"cors\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"x-auth-token\": window.localStorage.token\r\n            },\r\n        }).then(response => {\r\n            if (!response.ok) {\r\n                this.handleResponseError(response);\r\n            }\r\n            return response.json();\r\n        })\r\n            .catch(error => {\r\n                this.handleError(error);\r\n            });\r\n    }\r\n\r\n    async updatePageProperty(updateItem) {\r\n        return fetch('https://wakanda-cm.developerprogram.org/api/v1/channel/page/update', {\r\n            method: \"put\",\r\n            mode: \"cors\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"x-auth-token\": window.localStorage.token\r\n            },\r\n            body: JSON.stringify(updateItem)\r\n        })\r\n            .then(response => {\r\n                if (!response.ok) {\r\n                    this.handleResponseError(response);\r\n                }\r\n                return response.json();\r\n            })\r\n            .catch(error => {\r\n                this.handleError(error);\r\n            });\r\n    }\r\n\r\n    handleResponseError(response) {\r\n        throw new Error(\"HTTP error, status = \" + response.status);\r\n    }\r\n    handleError(error) {\r\n        console.log(error);\r\n    }\r\n}\r\nexport default ItemService;","import React, { Component } from 'react';\r\nimport ItemService from './service';\r\nimport { Modal } from 'react-bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Moment from 'moment';\r\n\r\nclass Ribbon extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.itemService = new ItemService();\r\n        this.setShow = this.setShow.bind(this);\r\n        this.setShowTable = this.setShowTable.bind(this);\r\n        this.chackToken = this.chackToken.bind(this);\r\n        this.showPageProperty = this.showPageProperty.bind(this);\r\n        this.onPageOpen = this.onPageOpen.bind(this);\r\n        this.login = this.login.bind(this);\r\n        this.refreshToken = this.refreshToken.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleVirtualChange = this.handleVirtualChange.bind(this);\r\n        this.updatePageProperty = this.updatePageProperty.bind(this);\r\n        this.getRowsData = this.getRowsData.bind(this);\r\n     \r\n        this.state = {\r\n            showDetails: false,\r\n            showLogin: false,\r\n            showError: false,\r\n            show: false,\r\n            showTable:false,\r\n            searchable: false,\r\n            virtual: false,\r\n            isVirtualPage: false,\r\n            open: false,\r\n            showVirtualPage: false\r\n        }\r\n    }\r\n\r\n    handleChange({ target }) {\r\n        this.setState({\r\n            [target.name]: target.value\r\n        });\r\n    }\r\n\r\n    handleVirtualChange() {\r\n        this.state.isVirtualPage = !this.state.isVirtualPage;\r\n        this.state.showVirtualPage = false;\r\n    }\r\n\r\n    getRowsData = function () {\r\n        var items = this.state.tableData;\r\n        var keys = ['date', \"time\", \"username\", \"property\", \"oldValue\", \"newValue\"];\r\n        return items.map((row, index) => {\r\n            row.date = Moment(row.date).format('MMM-DD-YYYY')\r\n            return <tr key={index}>\r\n                <RenderRow key={index} data={row} keys={keys} />\r\n            </tr>\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const showDetails = this.state.showDetails;\r\n        const showLogin = this.state.showLogin;\r\n        const showError = this.state.showError;\r\n        const show = this.state.show;\r\n        const showTable = this.state.showTable;\r\n        const open = this.state.open;\r\n        const showVirtualPage = this.state.showVirtualPage;\r\n\r\n        return (\r\n            <>\r\n                <section className=\"dpm-togglenav-section-area\">\r\n                    {open && <div className=\"dpm-nav-area\">\r\n                        <div align=\"center\">\r\n                            {showLogin && <form id=\"login\" >\r\n                                <input type=\"text\" placeholder=\"User Name\" name=\"Username\" className=\"dpm-input-field\" value={this.state.username} onChange={this.handleChange} />\r\n                                <input type=\"password\" placeholder=\"Password\" name=\"Password\" className=\"dpm-input-field\" value={this.state.password} onChange={this.handleChange} />\r\n                                <button type=\"button\" className=\"dpm-login-btn-area\" onClick={this.login}>Log In</button>\r\n                            </form>}\r\n                            {showDetails && <button type=\"button\" className=\"dpm-login-btn-area\" onClick={this.onPageOpen}>Page Property</button>}\r\n                        </div>\r\n                        {showError && <span id=\"logInError\"> Invalid username & password.</span>}\r\n                    </div>}\r\n                    <div onClick={this.chackToken} className=\"dpm-toggle-btn-area\"><span className=\"dpm-plus-icon-area\">+</span></div>\r\n                </section>\r\n\r\n                <Modal\r\n                    show={show}\r\n                    onHide={this.setShow}\r\n                    dialogClassName=\"modal-90w\"\r\n                    aria-labelledby=\"example-custom-modal-styling-title\">\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title id=\"example-custom-modal-styling-title\">\r\n                            Page Properties\r\n                    </Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <ul className=\"nav mb-4\">\r\n                            <li className=\"nav-item m-1\">\r\n                                <button type=\"button\" onClick={this.updatePageProperty} className=\"dpm-login-btn-area\" href=\"#\">\r\n                                    <i className=\"fa fa-save mr-1\"></i>Save\r\n\t\t\t\t\t\t     </button>  \r\n                            </li>\r\n                            <li className=\"nav-item m-1\">\r\n                                <button type=\"button\" onClick={this.showPageProperty} className=\"dpm-login-btn-area\" href=\"#\">\r\n                                Page Property\r\n\t\t\t\t\t\t     </button>\r\n                            </li>\r\n                        </ul>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12 mb-4\">\r\n                                <div className=\"card\">\r\n                                    <div className=\"card-header bg-dark text-white\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-4 col-12\">Page Property</div>\r\n                                            <div className=\"col-md-4 col-12\">Current Value</div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"card-body\">\r\n                                        <div className=\"form-group row\">\r\n                                            <label className=\"col-md-4 col-12 col-form-label\">Page Name</label>\r\n                                            <div className=\"col-md-8 col-12\">\r\n                                                <input type=\"text\" name=\"PageName\" value={this.state.PageName} onChange={this.handleChange} className=\"form-control\" />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"form-group row\">\r\n                                            <label className=\"col-md-4 col-12 col-form-label\">Page Display Name</label>\r\n                                            <div className=\"col-md-8 col-12\">\r\n                                                <input type=\"text\" name=\"PageDisplayName\" value={this.state.PageDisplayName} onChange={this.handleChange} className=\"form-control\" />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"form-group row\">\r\n                                            <label className=\"col-md-4 col-12 col-form-label\">Description</label>\r\n                                            <div className=\"col-md-8 col-12\">\r\n                                                <textarea type=\"text\" name=\"Discription\" value={this.state.Discription} onChange={this.handleChange} className=\"form-control\" ></textarea>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"form-group row\">\r\n                                            <div className=\"col-md-4 col-12\">Searchable</div>\r\n                                            <div className=\"col-md-8 col-12\">\r\n                                                <div className=\"form-check icheck-primary\">\r\n                                                    <input id=\"searchable\" name=\"searchable\" className=\"icheck-size\" onChange={this.handleChangecheck} defaultChecked={this.state.searchable} type=\"checkbox\" />\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group row\">\r\n                                            <div className=\"col-md-4 col-12\">Virtual</div>\r\n                                            <div className=\"col-md-8 col-12\">\r\n                                                <div className=\"form-check icheck-primary\">\r\n                                                    <input defaultChecked={this.state.virtual} className=\"icheck-size\" onChange={this.handleChangecheck} name=\"virtual\" type=\"checkbox\" id=\"Virtual\" />\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"col-12 mb-4\">\r\n                                <div className=\"card\">\r\n                                    <div className=\"card-header bg-dark text-white\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-4 col-12\">Custom Page Property</div>\r\n                                            <div className=\"col-md-4 col-12\">Current Value</div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"card-body\">\r\n                                        <div className=\"form-group row\">\r\n                                            <label className=\"col-md-4 col-12 col-form-label\">Require Additional Details for Logged-Out User</label>\r\n                                            <div className=\"col-md-8 col-12 select-dropdown\">\r\n\r\n                                                <select className=\"form-control select\" ng-model=\"vm.taxonomyManagement.customProperties[0].answer\" name=\"RequireAdditional\" >\r\n                                                    <option value=\"\">Select One</option>\r\n                                                    <option label=\"Yes\" value=\"6\">Yes</option>\r\n                                                    <option label=\"No\" value=\"7\">No</option>\r\n                                                </select>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group row\">\r\n                                            <label className=\"col-md-4 col-12 col-form-label\">Parent URL</label>\r\n                                            <div className=\"col-md-8 col-12\">\r\n                                                <input type=\"text\" name=\"ParentURL\" ng-model=\"vm.taxonomyManagement.parentURL\" className=\"form-control\" />\r\n                                            </div>\r\n                                        </div>                                  \r\n\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </Modal.Body>\r\n                </Modal>\r\n\r\n                <Modal\r\n                    show={showTable}\r\n                    onHide={this.setShowTable}\r\n                    dialogClassName=\"modal-90w\"\r\n                    aria-labelledby=\"example-custom-modal-styling-title\">\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title id=\"example-custom-modal-styling-title\">\r\n                            Page Properties\r\n                    </Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <table className=\"table table-striped\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>Date</th>\r\n                                    <th>Time</th>\r\n                                    <th>User</th>\r\n                                    <th>Property</th>\r\n                                    <th>From Value</th>\r\n                                    <th>To Value</th>\r\n                                </tr>\r\n                            </thead>\r\n                            {showTable && <tbody>\r\n                                {this.getRowsData()}\r\n                            </tbody>}\r\n                        </table>\r\n                    </Modal.Body>\r\n                </Modal>\r\n            </>\r\n        );\r\n    }\r\n\r\n\r\n    setShow() {\r\n        this.setState({\r\n            show: !this.state.show\r\n        });\r\n    }\r\n\r\n    setShowTable() {\r\n        this.setState({\r\n            showTable: !this.state.showTable\r\n        });\r\n    }\r\n\r\n    login() {\r\n        var data = {\r\n            username: this.state.Username,\r\n            password: this.state.Password\r\n        };\r\n        this.itemService.login(data).then(item => {\r\n            if (item != undefined && item.username != null) {\r\n                window.localStorage.refreshToken = item.refreshToken;\r\n                window.localStorage.token = item.accessToken;\r\n                this.setState({\r\n                    showDetails: true,\r\n                    showLogin: false,\r\n                    showError: false\r\n                });\r\n            }\r\n            else {\r\n                this.setState({\r\n                    showError: true,\r\n                    showDetails: false,\r\n                    showLogin: true\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    chackToken() {\r\n        this.setState({\r\n            open: !this.state.open\r\n        });\r\n        this.itemService.validateToken().then(item => {\r\n            if (item != undefined && item.username != null) {\r\n                window.localStorage.refreshToken = item.refreshToken;\r\n                window.localStorage.token = item.accessToken;\r\n                this.setState({\r\n                    showDetails: true,\r\n                    showLogin: false\r\n                });\r\n            }\r\n            else {\r\n                this.setState({\r\n                    showDetails: false,\r\n                    showLogin: true\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    refreshToken() {\r\n        this.itemService.refreshToken().then(item => {\r\n            if (item != undefined && item.username != null) {\r\n                window.localStorage.refreshToken = item.refreshToken;\r\n                window.localStorage.token = item.accessToken;\r\n                this.setState({\r\n                    showDetails: true,\r\n                    showLogin: false\r\n                });\r\n            } else {\r\n                this.setState({\r\n                    showDetails: false,\r\n                    showLogin: true\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    onPageOpen() {\r\n        this.itemService.pageProperty().then(item => {\r\n            if (item) {\r\n                if (item.data.searchable) {\r\n                    this.setState({\r\n                        searchable: true\r\n                    });\r\n                }\r\n                if (item.data.virtual) {\r\n                    this.setState({\r\n                        virtual: true\r\n                    });\r\n                }\r\n                if (item.data.isVirtualPage) {\r\n                    this.setState({\r\n                        isVirtualPage: true,\r\n                        showVirtualPage: true\r\n                    });\r\n                }\r\n                this.setState({\r\n                    show: true,\r\n                    PageName: item.data.nodeName,\r\n                    PageDisplayName: item.data.displayName,\r\n                    Discription: item.data.description,\r\n                    UUID: item.data.uuid\r\n                });\r\n            } else {\r\n                this.setState({\r\n                    showDetails: false,\r\n                    showLogin: true\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    showPageProperty() {\r\n        debugger\r\n        this.itemService.getPageProperty(this.state.UUID).then(item => {\r\n            if (item) {\r\n                this.state.tableData = item.data.results;\r\n                \r\n                this.setState({\r\n                    showTable: true\r\n                });\r\n\r\n            }\r\n        });\r\n    }\r\n\r\n    updatePageProperty() {\r\n        var data = {\r\n            displayName: this.state.PageDisplayName,\r\n            description: this.state.Discription,\r\n            searchable: this.state.searchable,\r\n            virtual: this.state.virtual,\r\n            uuid: this.state.UUID\r\n        };\r\n        this.itemService.updatePageProperty(data).then(item => {\r\n            if (item.data) {\r\n                alert(item.message);\r\n            }\r\n        });\r\n    }\r\n\r\n}\r\n\r\nconst RenderRow = (props) => {\r\n    return props.keys.map((key, index) => {\r\n        return <td key={props.data[key]}>{props.data[key]}</td>\r\n    })\r\n}\r\nexport default Ribbon;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Ribbon from './test';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(<Ribbon />, document.getElementById('root123'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}